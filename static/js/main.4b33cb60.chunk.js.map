{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","type","button","onClick","disabled","Login","useState","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","useEffect","timerId","setTimeout","console","log","includes","trim","length","clearTimeout","login","onSubmit","event","preventDefault","onLogin","control","invalid","htmlFor","id","value","onChange","target","onBlur","actions","btn","Home","home","Navigation","nav","isLoggedIn","href","onLogout","MainHeader","isAuthenticated","App","setIsLoggedIn","state","logoutHandler","Fragment","email","password","localStorage","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b33cb60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3mQl6\",\"control\":\"Login_control__2O8vc\",\"invalid\":\"Login_invalid__1vVG5\",\"actions\":\"Login_actions__21QyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3-IkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1yBiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__O2vn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2Pd9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__3TKs7\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // чтобы емвйл@ алуу учун\n  const [emailIsValid, setEmailIsValid] = useState();\n  // Валигация true или false.чтобы класстарды алмаштыруу учун.\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // Password значениясын алуу учун\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      console.log(\"hello\");\n      setFormIsValid(\n        enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      );\n    }, 1500);\n    return () => {\n      // Clean up function\n      // и это гарантирует что всякий раз,когда запускается фнукци очистки,\n      // Я очищаю таймер который был установлен до запуска этой\n      // функции очистки,Таким образом мы очищаем последний таймер,прежде чем устоновить новый.\n      console.log(\"CkeapUP\");\n\n      clearTimeout(timerId);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && enteredEmail.includes(\"@\")\n    );\n  };\n  // емайл@ болушу герек длинасы не важный, password длиннасы 6 болсо валидный болот экен,Эгерде андан аз длинна 5 болуп калса\n  // не валидный болуп эсептелет,ушул проверкадан откондон кийин кана регистрация болот,\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n// Бул жакта инпутардын ичиндеги логин@ passvord обезательно толтуруу керек.\n\nexport default Login;\n","import React from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport classes from './Navigation.module.css';\n\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [state,setState] = useState(0)\n // false => true =>\n \n  // бул жерде функциянын иштеши,колдонучу логин парольду толтурганга чейин false,\n  \n    useEffect(() => {\n      console.log(\"hello adedd\");\n      console.log(state);\n    }, [state]); //колбек функция зовисимо, от этово state озгорсо колбек функция иштейт.\n  // болуп турат,форманы толтургандан кийин true,болуп иштеп баштайт.\n  \n    const logoutHandler = () => {\n      setIsLoggedIn(false);\n    };\n  const loginHandler = (email, password) => {\n    localStorage.removeItem('isLogin')\n    setIsLoggedIn(true);\n  };\n\n  function add(){\n    setState((prevState) => prevState + 1)\n  }\n\n  // Буга чейин айтып кеткендей эле,эгерде биз Http-запрстторду кайсы бир компоннентин ичине сылып койдук дейли,\n  // бизде State-тер постаянно алмашат рендер болот,рендер болгон сайын запростор кайра кайра кайталанып калат ал \n  // кезде биз серверди сындырып алабыз,Ушундай койгойгоду побочный эффектерди отдельно обработка кылу учун,проблемаларды чечу учун \n  // бизде React-та,UseEffect() Хук деген Функциясы бар,либой хукту биз компоннентин ичинде колднобуз,компоненнтен сырткары болуп калса\n  // ал хук жон кана иштебей туруп калат.useEffect озуно эки аргумент алат. биринчиси колбек useEffect(()=>{...}) функциясын алат озуно колбек функциянын\n  // ичине сразу жазып кетсек болот коду или просто вызвать функция.Экинчиси [dependencies] Зовисимость - этого эффекта тойесть,колбек функциянын ичиндеги\n  // малымат озгоргондо функция иштеп баштайт, колбек функция зависимость от своих dependencies.\n\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n    // Home,Login компоненнтерди рендер кылуу браузерге коргозу.из лгоин true,болсо Home\n    // деген страница беребиз,Welcom back деген страницага тушот,колдонучу тушунот что регицттрациядан отконун.\n    // Если колдонучу регистрациядан ото элек болсо isLoggedIh,беребиз биринчи регистрациядан отунуз деп,чтобы попасть\n    // на страницу Home.на страницу Home попадает те люди каторые прошли регицтрацию.\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}